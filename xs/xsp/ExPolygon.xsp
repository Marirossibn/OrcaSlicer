%module{Slic3r::XS};

%{
#include <myinit.h>
#include "ExPolygon.hpp"
%}

%name{Slic3r::ExPolygon} class ExPolygon {
    ExPolygon* clone()
        %code{% const char* CLASS = "Slic3r::ExPolygon"; RETVAL = new ExPolygon(*THIS); RETVAL->in_collection = false; %};
    SV* arrayref()
        %code{% RETVAL = THIS->to_SV(); %};
    SV* pp()
        %code{% RETVAL = THIS->to_SV_pureperl(); %};
    void scale(double factor);
    void translate(double x, double y);
%{

ExPolygon*
ExPolygon::new(...)
    CODE:
        RETVAL = new ExPolygon ();
        // ST(0) is class name, ST(1) is contour and others are holes
        RETVAL->contour.from_SV_check(ST(1));
        RETVAL->holes.resize(items-2);
        for (unsigned int i = 2; i < items; i++) {
            RETVAL->holes[i-2].from_SV_check(ST(i));
        }
    OUTPUT:
        RETVAL

void
ExPolygon::DESTROY()
    CODE:
        if (!THIS->in_collection) {
            delete THIS;
            THIS = NULL;
        }

void
ExPolygon::rotate(angle, center_sv)
    double  angle;
    SV*     center_sv;
    CODE:
        Point center;
        center.from_SV_check(center_sv);
        THIS->rotate(angle, &center);

%}
};
