%module{Slic3r::XS};

%{
#include <myinit.h>
#include "clipper.hpp"
#include "ClipperUtils.hpp"
%}

%package{Slic3r::Geometry::Clipper};

%{

Polygons
offset(polygons, delta, scale = 100000, joinType = ClipperLib::jtMiter, miterLimit = 3)
    Polygons                polygons
    const float             delta
    double                  scale
    ClipperLib::JoinType    joinType
    double                  miterLimit
    CODE:
        offset(polygons, RETVAL, delta, scale, joinType, miterLimit);
    OUTPUT:
        RETVAL

ExPolygons
offset_ex(polygons, delta, scale = 100000, joinType = ClipperLib::jtMiter, miterLimit = 3)
    Polygons                polygons
    const float             delta
    double                  scale
    ClipperLib::JoinType    joinType
    double                  miterLimit
    CODE:
        offset_ex(polygons, RETVAL, delta, scale, joinType, miterLimit);
    OUTPUT:
        RETVAL

Polygons
offset2(polygons, delta1, delta2, scale = 100000, joinType = ClipperLib::jtMiter, miterLimit = 3)
    Polygons                polygons
    const float             delta1
    const float             delta2
    double                  scale
    ClipperLib::JoinType    joinType
    double                  miterLimit
    CODE:
        offset2(polygons, RETVAL, delta1, delta2, scale, joinType, miterLimit);
    OUTPUT:
        RETVAL

ExPolygons
offset2_ex(polygons, delta1, delta2, scale = 100000, joinType = ClipperLib::jtMiter, miterLimit = 3)
    Polygons                polygons
    const float             delta1
    const float             delta2
    double                  scale
    ClipperLib::JoinType    joinType
    double                  miterLimit
    CODE:
        offset2_ex(polygons, RETVAL, delta1, delta2, scale, joinType, miterLimit);
    OUTPUT:
        RETVAL

Polygons
diff(subject, clip, safety_offset = false)
    Polygons    subject
    Polygons    clip
    bool        safety_offset
    CODE:
        diff(subject, clip, RETVAL, safety_offset);
    OUTPUT:
        RETVAL

ExPolygons
diff_ex(subject, clip, safety_offset = false)
    Polygons    subject
    Polygons    clip
    bool        safety_offset
    CODE:
        diff(subject, clip, RETVAL, safety_offset);
    OUTPUT:
        RETVAL

Polygons
intersection(subject, clip, safety_offset = false)
    Polygons                    subject
    Polygons                    clip
    bool                        safety_offset
    CODE:
        intersection(subject, clip, RETVAL, safety_offset);
    OUTPUT:
        RETVAL

ExPolygons
intersection_ex(subject, clip, safety_offset = false)
    Polygons                    subject
    Polygons                    clip
    bool                        safety_offset
    CODE:
        intersection(subject, clip, RETVAL, safety_offset);
    OUTPUT:
        RETVAL

ExPolygons
xor_ex(subject, clip, safety_offset = false)
    Polygons                    subject
    Polygons                    clip
    bool                        safety_offset
    CODE:
        xor_ex(subject, clip, RETVAL, safety_offset);
    OUTPUT:
        RETVAL

ExPolygons
union_ex(subject, safety_offset = false)
    Polygons                    subject
    bool                        safety_offset
    CODE:
        union_ex(subject, RETVAL, safety_offset);
    OUTPUT:
        RETVAL

%}
